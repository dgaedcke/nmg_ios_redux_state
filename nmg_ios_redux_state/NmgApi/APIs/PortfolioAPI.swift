//
// PortfolioAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire
import PromiseKit



open class PortfolioAPI {
    /**
     history portfolio
     
     - parameter historyRequestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func portfolioHistory(historyRequestBody: HistoryRequestBody, completion: @escaping ((_ data: HistoryMsgResponseBodyCollection?,_ error: Error?) -> Void)) {
        portfolioHistoryWithRequestBuilder(historyRequestBody: historyRequestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     history portfolio
     
     - parameter historyRequestBody: (body)  
     - returns: Promise<HistoryMsgResponseBodyCollection>
     */
    open class func portfolioHistory( historyRequestBody: HistoryRequestBody) -> Promise<HistoryMsgResponseBodyCollection> {
        let (promise, resolver) = Promise<HistoryMsgResponseBodyCollection>.pending()
        portfolioHistory(historyRequestBody: historyRequestBody) { data, error in
            if let error = error {
                resolver.reject(error)
            } else {
                resolver.fulfill(data!)
            }
        }
        return promise
    }

    /**
     history portfolio
     - POST /portfolio/history
     - events causing portfolio change
     - examples: [{contentType=application/json, example=""}]
     
     - parameter historyRequestBody: (body)  

     - returns: RequestBuilder<HistoryMsgResponseBodyCollection> 
     */
    open class func portfolioHistoryWithRequestBuilder(historyRequestBody: HistoryRequestBody) -> RequestBuilder<HistoryMsgResponseBodyCollection> {
        let path = "/portfolio/history"
        let URLString = NmgApiAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: historyRequestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<HistoryMsgResponseBodyCollection>.Type = NmgApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     summary portfolio
     
     - parameter summaryRequestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func portfolioSummary(summaryRequestBody: SummaryRequestBody, completion: @escaping ((_ data: SummarymsgResponseBodyCollection?,_ error: Error?) -> Void)) {
        portfolioSummaryWithRequestBuilder(summaryRequestBody: summaryRequestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     summary portfolio
     
     - parameter summaryRequestBody: (body)  
     - returns: Promise<SummarymsgResponseBodyCollection>
     */
    open class func portfolioSummary( summaryRequestBody: SummaryRequestBody) -> Promise<SummarymsgResponseBodyCollection> {
        let (promise, resolver) = Promise<SummarymsgResponseBodyCollection>.pending()
        portfolioSummary(summaryRequestBody: summaryRequestBody) { data, error in
            if let error = error {
                resolver.reject(error)
            } else {
                resolver.fulfill(data!)
            }
        }
        return promise
    }

    /**
     summary portfolio
     - POST /portfolio/list
     - shows user equity ownership
     - examples: [{contentType=application/json, example=""}]
     
     - parameter summaryRequestBody: (body)  

     - returns: RequestBuilder<SummarymsgResponseBodyCollection> 
     */
    open class func portfolioSummaryWithRequestBuilder(summaryRequestBody: SummaryRequestBody) -> RequestBuilder<SummarymsgResponseBodyCollection> {
        let path = "/portfolio/list"
        let URLString = NmgApiAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: summaryRequestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<SummarymsgResponseBodyCollection>.Type = NmgApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
